package client;

import java.awt.Frame;

import connection.DatabaseConnectionManager;
import connection.WebConnectionManager;
import motiondetection.MotionDetector;
import motiondetection.MotionEvent;
import motiondetection.MotionListener;
import motiondetection.MotionListenerInterface;

public class Control implements MotionListenerInterface, SystemStateChangeInterface {
	
	private MotionDetector motionDetector = null;
	private DatabaseConnectionManager dbConnManager = null;
	private WebConnectionManager webConnManager = null;
	
	
	/**
	 * Constructor: Takes a frame that will display the results from the motion detection
	 * @param frame
	 */
	public Control(Frame frame) {
		MotionListener.addMotionListener(this);
	}


	/**
	 * The motion event handler for this class. When motion 
	 * is detected, this function is called.
	 * @param motionevent (MotionEvent)
	 * @return void
	 */
	public void motion(MotionEvent me) {
		if (!SystemState.Recording && SystemState.Activated)
		{
			// TODO
			// Start Recording / Broadcasting
		}
	}


	@Override
	public void stateChanged(StateChangeEvent sce) {
		if(!SystemState.Activated)
		{
			// TODO
			// System has changed from activated to deactivated
			// stop trigger / recording / etc
		}
	}
	
	
	
	
	
	
}
